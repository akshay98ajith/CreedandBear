{"version":3,"file":"static/js/2.1d457c02.chunk.js","mappings":"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","sources":["Components/Table.jsx","url.js","Pages/Users.jsx","api.js"],"sourcesContent":["import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { usersURL } from \"../url\";\r\nimport imgFailed from \"../Assets/imgFailed.jpg\";\r\n\r\nconst Table = (props) => {\r\n  const imageFormatter = (cell) => {\r\n    return <img className=\"tableImg\" src={cell ? cell : imgFailed} alt=\"\" />;\r\n  };\r\n  let navigate = useNavigate();\r\n\r\n  let clickEvents = {\r\n    onClick: (e, props) => {\r\n      navigate(`${usersURL}/profile?id=${props.id}`, { state: { props } });\r\n    },\r\n  };\r\n  let columns;\r\n  if (props.count === 0) {\r\n    return (\r\n      <div className=\"dangerBanner\">No User Found. Add or Generate User</div>\r\n    );\r\n  } else {\r\n    columns = [\r\n      {\r\n        sort: true,\r\n        dataField: \"id\",\r\n        text: \"ID\",\r\n      },\r\n      {\r\n        dataField: \"avatar\",\r\n        text: \"AVATAR\",\r\n        formatter: imageFormatter,\r\n      },\r\n      { sort: true, dataField: \"first_name\", text: \"FIRST NAME\" },\r\n      {\r\n        sort: true,\r\n        dataField: \"last_name\",\r\n        text: \"LAST NAME\",\r\n      },\r\n      {\r\n        dataField: \"email\",\r\n        text: \"EMAIL\",\r\n      },\r\n    ];\r\n  }\r\n  return (\r\n    <div className=\"Table\">\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        data={props.list}\r\n        columns={columns}\r\n        rowEvents={clickEvents}\r\n        hover\r\n        condensed\r\n        pagination={paginationFactory()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","export const baseURL = \"http://localhost:5000\"\r\n\r\nexport const usersURL = \"/users\"","// import axios from \"../axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Table from \"../Components/Table\";\r\nimport Modal from \"react-modal\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createUserAPI, generateUserAPI, getUsersAPI } from \"../api\";\r\n// import { usersURL } from \"../url\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    background: \"#ebecff\",\r\n    border: \"none\",\r\n    width: \"450px\",\r\n    maxHeight: \"80vh\",\r\n  },\r\n  overlay: {\r\n    background: \"#0000006c\",\r\n  },\r\n};\r\n\r\nconst Users = () => {\r\n  let subtitle;\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [change, setChange] = useState(false);\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const refresh = () => {\r\n    setChange((prev) => !prev);\r\n  };\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"#f00\";\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const getUsers = () => {\r\n    // axios.get(usersURL).then((res) => {\r\n    //   console.log(res.data);\r\n    //   setUsers(res.data);\r\n    // });\r\n    const doGetUsers = async () => {\r\n      try {\r\n        const result = await getUsersAPI();\r\n        console.log(\"Successfully fetched all users\", result);\r\n        setUsers(result);\r\n      } catch (error) {\r\n        console.log(\"error fetching users\", error);\r\n      }\r\n    };\r\n    doGetUsers();\r\n  };\r\n  const doGenerateUser = async () => {\r\n    try {\r\n      const result = await generateUserAPI();\r\n      console.log(\"generation successful\", result);\r\n    } catch (error) {\r\n      console.log(\"generation error\", error);\r\n    }\r\n    // axios.post(usersURL, {\r\n    //   // id: faker.datatype.uuid(),\r\n    //   first_name: faker.name.firstName(),\r\n    //   last_name: faker.name.lastName(),\r\n    //   email: faker.internet.email(),\r\n    //   avatar: faker.internet.avatar(),\r\n    //   address: faker.address.city(),\r\n    //   dob: faker.date.birthdate(),\r\n    //   phone: faker.phone.number(),\r\n    //   password:faker.internet.password(),\r\n    //   username:faker.internet.userName()\r\n    // });\r\n    refresh();\r\n  };\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const result = await createUserAPI(data);\r\n      console.log(\"creation successful\", result);\r\n      reset();\r\n      closeModal();\r\n      refresh();\r\n    } catch (error) {\r\n      console.log(\"creation error\", error);\r\n    }\r\n    // axios\r\n    //   .post(usersURL, {\r\n    //     first_name: data.firstName,\r\n    //     last_name: data.lastName,\r\n    //     email: data.email,\r\n    //     address: data.address,\r\n    //     dob: data.dob,\r\n    //     phone: data.phone,\r\n    //     password: data.password,\r\n    //     username: data.username,\r\n    //     avatar: faker.internet.avatar(),\r\n    //   })\r\n    //   .then((res) => {\r\n    //     reset();\r\n    //     closeModal();\r\n    //     refresh();\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     alert(err.response.data.message);\r\n    //     console.log(err.response);\r\n    //   });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n    return () => {\r\n      getUsers();\r\n    };\r\n  }, [change]);\r\n  return (\r\n    <div className=\"Pages\">\r\n      <div className=\"\">\r\n        {/* <Card title=\"Users\" list={users} refresh={refresh} isTable /> */}\r\n        <div className=\"Card\">\r\n          <div className=\"d-flex justify-content-between mb-2\">\r\n            <h2>Users</h2>\r\n            <div>\r\n              <button onClick={openModal}>Add User</button>\r\n              <Modal\r\n                isOpen={modalIsOpen}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"User Add\"\r\n                ariaHideApp={false}\r\n              >\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <h3>Add Users</h3>\r\n                  <button className=\"closeBtn\" onClick={closeModal}>\r\n                    X\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal\">\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <label>\r\n                      <span>First name</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        {...register(\"first_name\", { required: true })}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      <span>Last name</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        {...register(\"last_name\", { required: true })}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      <span>Password</span>\r\n                      <input\r\n                        type=\"password\"\r\n                        {...register(\"password\", { required: true })}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      <span>Username</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        {...register(\"username\", { required: true })}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      <span>Email</span>\r\n                      <input\r\n                        type=\"email\"\r\n                        {...register(\"email\", { required: true })}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      <span>Address</span>\r\n                      <input type=\"text\" {...register(\"address\")} />\r\n                    </label>\r\n                    <label>\r\n                      <span>Phone</span>\r\n                      <input type=\"number\" {...register(\"phone\")} />\r\n                    </label>\r\n                    <label>A Random Avatar will be Generated</label>\r\n                    <button type=\"submit\" value=\"submit\">\r\n                      Add User\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Modal>\r\n              <button onClick={doGenerateUser}>Generate User</button>\r\n            </div>\r\n          </div>\r\n          <Table list={users} count={users.length} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { faker } from \"@faker-js/faker\";\r\n\r\nexport let users = {\r\n    1: {\r\n        id: 1,\r\n        avatar: \"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/818.jpg\",\r\n        first_name: 'Super',\r\n        last_name: 'User',\r\n        username: 'superuser',\r\n        email: 'super@super.com',\r\n        phone: '11111111',\r\n        password: 'superuser',\r\n        address: faker.address.city(),\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersAPI = () =>\r\n    new Promise((resolve, reject) => {\r\n        if (!users) {\r\n            return setTimeout(\r\n                () => reject(new Error('Users not found')),\r\n                250\r\n            );\r\n        }\r\n        setTimeout(() => resolve(Object.values(users)), 250);\r\n    });\r\n\r\nexport const getUserProfileAPI = (id) =>\r\n    new Promise((resolve, reject) => {\r\n        const user = users[id];\r\n        if (!user) {\r\n            return setTimeout(\r\n                () => reject(new Error('User not found')),\r\n                250\r\n            );\r\n        }\r\n        setTimeout(() => resolve(user), 250);\r\n    });\r\n\r\n\r\nexport const createUserAPI = (data) =>\r\n    new Promise((resolve, reject) => {\r\n        // if (!data.firstName || !data.lastName) {\r\n        //     reject(new Error('Not all information provided'));\r\n        // }\r\n        const id = faker.datatype.uuid();\r\n        const avatar = faker.internet.avatar()\r\n        const newUser = { id, avatar, ...data };\r\n        users = { ...users, [id]: newUser };\r\n        setTimeout(() => resolve(true), 250);\r\n    });\r\n\r\nexport const generateUserAPI = () =>\r\n    new Promise((resolve, reject) => {\r\n        // if (!data.firstName || !data.lastName) {\r\n        //     reject(new Error('Not all information provided'));\r\n        // }\r\n        const id = faker.datatype.uuid();\r\n        const first_name = faker.name.firstName();\r\n        const last_name = faker.name.lastName();\r\n        const email = faker.internet.email();\r\n        const avatar = faker.internet.avatar();\r\n        const address = faker.address.city();\r\n        const phone = faker.phone.number();\r\n        const password = faker.internet.password();\r\n        const username = faker.internet.userName();\r\n        const newUser = { id, first_name, last_name, email, avatar, address, phone, password, username };\r\n        users = { ...users, [id]: newUser }\r\n        setTimeout(() => resolve(true), 250);\r\n    });\r\n\r\nexport const deleteUserAPI = (id) =>\r\n    new Promise((resolve, reject) => {\r\n        const { [id]: user, ...rest } = users;\r\n\r\n        if (!user) {\r\n            return setTimeout(\r\n                () => reject(new Error('User not found')),\r\n                250\r\n            );\r\n        }\r\n\r\n        users = { ...rest };\r\n\r\n        return setTimeout(() => resolve(true), 250);\r\n    });\r\n\r\nexport const updateUserAPI = (id, data) =>\r\n    new Promise((resolve, reject) => {\r\n        if (!users[id]) {\r\n            return setTimeout(\r\n                () => reject(new Error('User not found')),\r\n                250\r\n            );\r\n        }\r\n\r\n        users[id] = { ...users[id], ...data };\r\n\r\n        return setTimeout(() => resolve(true), 250);\r\n    });"],"names":["props","columns","navigate","useNavigate","clickEvents","onClick","e","id","state","count","className","sort","dataField","text","formatter","cell","src","imgFailed","alt","keyField","data","list","rowEvents","hover","condensed","pagination","paginationFactory","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","width","maxHeight","overlay","useState","modalIsOpen","setIsOpen","users","setUsers","change","setChange","useForm","register","handleSubmit","reset","refresh","prev","closeModal","getUsers","doGetUsers","getUsersAPI","result","console","log","doGenerateUser","generateUserAPI","onSubmit","createUserAPI","useEffect","isOpen","onAfterOpen","subtitle","style","color","onRequestClose","contentLabel","ariaHideApp","type","required","value","length","avatar","first_name","last_name","username","email","phone","password","address","faker","Promise","resolve","reject","setTimeout","Error","Object","values","getUserProfileAPI","user","newUser","deleteUserAPI","rest","updateUserAPI"],"sourceRoot":""}